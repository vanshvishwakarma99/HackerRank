#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int base_to_decimal(int base, char *num_str) {
    int val = 0;
    for (int i = 0; num_str[i]; i++) {
        int digit = num_str[i] - '0';
        if (digit >= base) return -1;
        val = val * base + digit;
    }
    return val;
}

int cmp(const void *a, const void *b) {
    int x = *(int *)a;
    int y = *(int *)b;
    if (x < y) return -1;
    if (x > y) return 1;
    return 0;
}

int main() {
    int n;
    scanf("%d", &n);
    int *values = malloc(n * sizeof(int));
    int count = 0;

    for (int i = 0; i < n; i++) {
        int M;
        char D[10];
        scanf("%d %s", &M, D);
        int val = base_to_decimal(M, D);
        if (val != -1) {
            values[count++] = val;
        }
    }

    qsort(values, count, sizeof(int), cmp);

    long long jokes = 0;
    for (int i = 0; i < count;) {
        int j = i + 1;
        while (j < count && values[j] == values[i]) j++;
        int c = j - i;
        if (c > 1) {
            jokes += (long long)c * (c - 1) / 2;
        }
        i = j;
    }

    printf("%lld\n", jokes);
    free(values);
    return 0;
}
